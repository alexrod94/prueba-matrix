import Head from "next/head";
import Header from "../components/Header";
import PodcastCard from "../components/PodcastCard";
import { useState, useEffect } from "react";

export default function Home() {
  const [podcasts, setPodcasts] = useState([]);
  const [inputValue, setInputValue] = useState("");

  useEffect(() => {
    getPodcasts();
  }, []);

  const getPodcasts = async () => {
    const res = await fetch(
      "https://itunes.apple.com/us/rss/toppodcasts/limit=100/genre=1310/json"
    );
    const finalRes = await res.json();
    setPodcasts(finalRes.feed.entry);
  };

  const handleInputChange = (event) => {
    setInputValue(event.target.value);
  };

  const filteredPodcasts = podcasts.filter((podcast) => {
    return (
      podcast.title.label.toLowerCase().includes(inputValue.toLowerCase()) ||
      podcast["im:artist"].label
        .toLowerCase()
        .includes(inputValue.toLowerCase())
    );
  });

  return (
    <>
      <Head>
        <title>Prueba Matrix</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <div className="container w-5/6 mx-auto mb-8">
        <div className="flex justify-end items-center mb-6">
          <span className="bg-blue-500 px-1 text-white font-semibold text-sm rounded mr-4">
            {filteredPodcasts.length}
          </span>
          <input
            className="border border-gray-300 p-1 rounded"
            placeholder="Filter podcasts..."
            type="text"
            value={inputValue}
            onChange={handleInputChange}
          />
        </div>
        {filteredPodcasts.length > 0 ? (
          <div className="grid grid-cols-4 gap-x-4 gap-y-24">
            {filteredPodcasts.map((podcast) => (
              <PodcastCard
                key={podcast.id.attributes["im:id"]}
                id={podcast.id.attributes["im:id"]}
                title={podcast.title.label}
                img={podcast["im:image"][2].label}
                author={podcast["im:artist"].label}
              />
            ))}
          </div>
        ) : (
          <p className="text-red-500">Nothing to show</p>
        )}
      </div>
    </>
  );
}
